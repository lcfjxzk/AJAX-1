{"version":3,"sources":["main.js"],"names":["n","getPage","onclick","request","XMLHttpRequest","open","onreadystatechange","readyState","status","console","log","response","JSON","parse","forEach","item","li","document","createElement","textContent","id","xxx","appendChild","send","getJSON","object","myName","name","getXML","responseXML","dom","text","getElementsByTagName","trim","getHTML","onload","div","innerHTML","body","onerror","getJS","script","getCSS","style","head","alert"],"mappings":";AAgFA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GA/EA,IAAIA,EAAI,EACRC,QAAQC,QAAU,WACVC,IAAAA,EAAU,IAAIC,eACpBD,EAAQE,KAAK,MAAeL,QAAAA,OAAAA,EAAI,IAChCG,EAAQG,mBAAqB,WACA,IAAvBH,EAAQI,YAAuC,MAAnBJ,EAAQK,SACtCC,QAAQC,IAAIP,EAAQQ,UACNC,KAAKC,MAAMV,EAAQQ,UAC3BG,QAAQ,SAAAC,GACNC,IAAAA,EAAKC,SAASC,cAAc,MAClCF,EAAGG,YAAcJ,EAAKK,GACtBC,IAAIC,YAAYN,KAElBhB,GAAK,IAGTG,EAAQoB,QAGVC,QAAQtB,QAAU,WACVC,IAAAA,EAAU,IAAIC,eACpBD,EAAQE,KAAK,MAAO,WACpBF,EAAQG,mBAAqB,WAEvBH,GAAuB,IAAvBA,EAAQI,YAAuC,MAAnBJ,EAAQK,OAAgB,CACtDC,QAAQC,IAAWP,EAAAA,EAAQQ,WAC3BF,QAAQC,IAAIP,EAAQQ,UACdc,IAAAA,EAASb,KAAKC,MAAMV,EAAQQ,UAElCe,OAAOP,YAAcM,EAAOE,KAC5BlB,QAAQC,IAAWe,EAAAA,IACnBhB,QAAQC,IAAIe,KAGhBtB,EAAQoB,QAIVK,OAAO1B,QAAU,WACTC,IAAAA,EAAU,IAAIC,eACpBD,EAAQE,KAAK,MAAO,UACpBF,EAAQG,mBAAqB,WACvBH,GAAuB,IAAvBA,EAAQI,YAAuC,MAAnBJ,EAAQK,OAAgB,CACtDC,QAAQC,IAAIP,EAAQ0B,aACdC,IACAC,EADM5B,EAAQ0B,YACHG,qBAAqB,WAAW,GAAGb,YACpDV,QAAQC,IAAIqB,EAAKE,UAGrB9B,EAAQoB,QAIVW,QAAQhC,QAAU,WACVC,IAAAA,EAAU,IAAIC,eACpBD,EAAQE,KAAK,MAAO,WACpBF,EAAQgC,OAAS,WACTC,IAAAA,EAAMnB,SAASC,cAAc,OACnCkB,EAAIC,UAAYlC,EAAQQ,SACxBM,SAASqB,KAAKhB,YAAYc,IAE5BjC,EAAQoC,QAAU,aAClBpC,EAAQoB,QAIViB,MAAMtC,QAAU,WACRC,IAAAA,EAAU,IAAIC,eACpBD,EAAQE,KAAK,MAAO,SACpBF,EAAQgC,OAAS,WACTM,IAAAA,EAASxB,SAASC,cAAc,UACtCuB,EAAOJ,UAAYlC,EAAQQ,SAC3BM,SAASqB,KAAKhB,YAAYmB,IAE5BtC,EAAQoC,QAAU,aAClBpC,EAAQoB,QAIVmB,OAAOxC,QAAU,WACTC,IAAAA,EAAU,IAAIC,eACpBD,EAAQE,KAAK,MAAO,cACpBF,EAAQG,mBAAqB,WAGvBH,GAFJM,QAAQC,IAAIP,EAAQI,YAEO,IAAvBJ,EAAQI,WAENJ,GAAAA,EAAQK,QAAU,KAAOL,EAAQK,OAAS,IAAK,CAE3CmC,IAAAA,EAAQ1B,SAASC,cAAc,SACrCyB,EAAMN,UAAYlC,EAAQQ,SAC1BM,SAAS2B,KAAKtB,YAAYqB,QAE1BE,MAAM,cAIZ1C,EAAQoB","file":"main.c36821f0.js","sourceRoot":"..\\public","sourcesContent":["//----加载翻页按钮----\r\nlet n = 1;\r\ngetPage.onclick = () => {\r\n  const request = new XMLHttpRequest();\r\n  request.open(\"GET\", `/page${n + 1}`);\r\n  request.onreadystatechange = () => {\r\n    if (request.readyState === 4 && request.status === 200) {\r\n      console.log(request.response);\r\n      const array = JSON.parse(request.response); //把JSON字符串变成JS数组\r\n      array.forEach(item => {\r\n        const li = document.createElement(\"li\");\r\n        li.textContent = item.id;\r\n        xxx.appendChild(li);\r\n      }); //对每一项，每一项称为item\r\n      n += 1;\r\n    }\r\n  };\r\n  request.send();\r\n};\r\n//----加载JSON----\r\ngetJSON.onclick = () => {\r\n  const request = new XMLHttpRequest();\r\n  request.open(\"GET\", \"/5.json\");\r\n  request.onreadystatechange = () => {\r\n    //监听状态\r\n    if (request.readyState === 4 && request.status === 200) {\r\n      console.log(typeof request.response);\r\n      console.log(request.response);\r\n      const object = JSON.parse(request.response);\r\n      //JSON.parse的作用---->把符合json语法的字符串，变成JS对应类型的数据。如果不符合JSON语法，则抛出一个Error对象。\r\n      myName.textContent = object.name; //获取json里面的{\"name\": \"熊仲轲\"}\r\n      console.log(typeof object);\r\n      console.log(object);\r\n    }\r\n  };\r\n  request.send();\r\n};\r\n\r\n//----加载XML----\r\ngetXML.onclick = () => {\r\n  const request = new XMLHttpRequest();\r\n  request.open(\"GET\", \"/4.xml\");\r\n  request.onreadystatechange = () => {\r\n    if (request.readyState === 4 && request.status === 200) {\r\n      console.log(request.responseXML);\r\n      const dom = request.responseXML;\r\n      const text = dom.getElementsByTagName(\"warning\")[0].textContent;\r\n      console.log(text.trim()); //.trim()用于去掉回车\r\n    }\r\n  };\r\n  request.send();\r\n};\r\n\r\n//----加载HTML----\r\ngetHTML.onclick = () => {\r\n  const request = new XMLHttpRequest();\r\n  request.open(\"GET\", \"/3.html\");\r\n  request.onload = () => {\r\n    const div = document.createElement(\"div\"); //创建div标签\r\n    div.innerHTML = request.response; //填写div内容\r\n    document.body.appendChild(div); //插入到身体里\r\n  };\r\n  request.onerror = () => {};\r\n  request.send();\r\n};\r\n\r\n//----加载JS----\r\ngetJS.onclick = () => {\r\n  const request = new XMLHttpRequest();\r\n  request.open(\"GET\", \"/2.js\");\r\n  request.onload = () => {\r\n    const script = document.createElement(\"script\"); //创建script标签\r\n    script.innerHTML = request.response; //填写script内容\r\n    document.body.appendChild(script); //插到body里\r\n  };\r\n  request.onerror = () => {};\r\n  request.send();\r\n};\r\n\r\n//----加载CSS----\r\ngetCSS.onclick = () => {\r\n  const request = new XMLHttpRequest();\r\n  request.open(\"GET\", \"/style.css\"); //readyState = 1\r\n  request.onreadystatechange = () => {\r\n    console.log(request.readyState);\r\n    //下载完成，但不知道是成功 2xx 还是失败4xx 5xx。\r\n    if (request.readyState === 4) {\r\n      //如果状态码=4，则表示下载完毕。\r\n      if (request.status >= 200 && request.status < 300) {\r\n        //http状态码以2开头的都表示成功。\r\n        const style = document.createElement(\"style\"); //创建style标签\r\n        style.innerHTML = request.response; //填写style内容\r\n        document.head.appendChild(style); //插到head里面\r\n      } else {\r\n        alert(\"加载 CSS 失败\");\r\n      }\r\n    }\r\n  };\r\n  request.send(); //readyState = 2\r\n};\r\n"]}